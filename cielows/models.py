# -*- coding: utf-8 -*-
# This file is part of Python Cielo Webservice.
#
# Copyright (c) 2016, Rockho Team. All rights reserved.
# Author: Christian Hess
#
# This source code is licensed under the AGPLv3 license found in the
# LICENSE file in the root directory of this source tree.


class CieloPaymenType(object):
    CREDITCARD = "CreditCard"


class CieloCardBrand(object):
    VISA = "Visa"
    MASTERCARD = "Mastercard"
    AMEX = "Amex"
    ELO = "Elo"
    AURIA = "Auria"
    JCB = "JCB"
    DINERS = "Diners"
    DISCOVER = "Discover"
    

class CieloPaymentInterest(object):
    BYMERCHANT = "ByMerchant"
    

class CieloPaymentCurrency(object):
    BRL = "BRL"
    USD = "USD"
    MXN = "MXN"
    COP = "COP"
    CLP = "CLP"
    ARS = "ARS"
    PEN = "PEN"
    EUR = "EUR"
    PYN = "PYN"
    UYU = "UYU"
    VEB = "VEB"
    VEF = "VEF"
    GBP = "GBP"
    

class CieloJSONObject(object):

    '''
    Cielo JSON compatible object model.
    Cielo base object models must override this class,
    to be able to be instantiated from a valid Cielo JSON dictionary.
    '''
    _errors = []

    @classmethod
    def from_json(cls, cielo_json):
        '''
        Create a band new instance of this object
        populating attributes with the given Cielo JSON data in ´cielo_json´ 

        :param cielo_json: Cielo REST JSON as a dictionary
        :type cielo_json: dict  
        '''
        raise NotImplementedError("Implement this method.")

    def to_json(self):
        '''
        Returns this object as a JSON dictionary to be used on requests
        '''
        raise NotImplementedError("Implement this method.")

    def validate(self):
        '''
        Validates this object.
        Errors can be fetch through `errors` attribute.
        :rtype: bool
        :return: wheter this object is valid or not
        '''
        raise NotImplementedError("Implement this method.")

    @property
    def errors(self):
        '''
        Returns the errors generated by the `validate` method
        as a list os named tuples (K, V) where K is the
        attribute with error and V is the error itself
        '''
        return self._errors


class CieloCustomerAddress(CieloJSONObject):
    Street = ''
    Number = ''
    Complement = ''
    ZipCode = ''
    City = ''
    State = ''
    Country = ''


class CieloCustomer(CieloJSONObject):
    Name = ''
    Email = ''
    Birthdate = ''
    Identity = ''
    IdentityType = None
    Address = None
    DeliveryAddress = None

    class Meta:
        required = ['Name']


class CieloRequestCreditCard(CieloJSONObject):
    CardNumber = ''
    Holder = ''
    ExpirationDate = ''
    SecurityCode = ''
    Brand = None
    SaveCard = False

    class Meta:
        required = ['CardNumber', 'Holder', 'ExpirationDate', 'SecurityCode', 'Brand']


class CieloResponseCreditCard(CieloJSONObject):
    CardNumber = ''
    Holder = ''
    ExpirationDate = ''
    SecurityCode = ''
    Brand = None
    SaveCard = False
    CardToken = ''


class CieloResponsePaymentLink(CieloJSONObject):
    Method = ''
    Rel = ''
    Href = ''


class CieloRequestPayment(CieloJSONObject):
    Type = None
    CreditCard = None
    Amount = 0
    Currency = ''
    Country = ''
    Provider = ''
    ServiceTaxAmount = 0
    Installments = 0
    Interest = None
    Capture = False
    Authenticate = False
    SoftDescriptor = ''
    
    class Meta:
        required = ['Type', 'CreditCard', 'Amount']


class CieloResponsePayment(CieloJSONObject):
    ServiceTaxAmount = 0
    Installments = 0
    Interest = ''
    Capture = False
    Authenticate = False
    CreditCard = None
    ProofOfSale = ''
    Tid = ''
    AuthorizationCode = ''
    PaymentId = ''
    Type = None
    Currency = ''
    Country = ''
    ExtraDataCollection = []
    Status = 0
    ReturnCode = ''
    ReturnMessage = ''
    Links = []
    Amount = 0
    CapturedAmount = 0


class CieloRequest(CieloJSONObject):
    MerchantOrderId = ''
    Customer = None
    Payment = None

    @classmethod
    def from_json(cls, cielo_json):
        pass

    class Meta:
        required = ['MerchantOrderId', 'Customer', 'Payment']


class CieloResponse(CieloJSONObject):
    MerchantOrderId = ''
    Customer = None
    Payment = None

